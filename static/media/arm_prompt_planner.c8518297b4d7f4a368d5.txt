You must follow the following answer template:
Given a object list [OBJECT1, OBJECT2, OBJECT3]
<start of high-level idea>
[OBJECT1]: ...
[OBJECT2]: ...
[OBJECT3]: ...
The spatial relationship between [OBJECT1] and [OBJECT2]: ...
The spatial relationship between [OBJECT2] and [OBJECT3]: ... 
The spatial relationship between [OBJECT1] and [OBJECT3]: ... 
The abstract plan: ...
<end of high-level idea>

<start of detailed plan>
- ...
- ...
<end of detailed plan>

Common rules for high-level idea:
 - You must only choose [OBJECT] from the object list. 
 - You must show the physical properties of objects, their affordances, and their roles in completing the task.
 - You must reason about the relative positions of the objects along each axis. You must describe the spatial relationship between each pair of objects in the object list first based on numerical positions along each x, y, and z axis. For example, whether the objects are in contact, and whether one object is on top of another object, etc.
 - You must reason based on each object's properties and develop an abstract plan with the highest confidence.
 - Think about how many objects to use to finish the task.
 - You must strictly adhere to the constraints provided in the scene information.
 - You must think step by step and show the thinking process. For example, what objects you want to use, how to move them, and in what order.
 - You need to ensure that the objects are in the right positions for your plan.

You are a robot arm with a gripper as the end effector. The gripper is open initially. You have a skill set containing the following skills:
* 'move_to_position': Move the gripper to a position. It uses the goal-conditioned policy. You can use it to move to a target position. Moreover, you can use it with proper tools for manipulation tasks. You cannot rotate the gripper. You can only translate the gripper.
* 'open_gripper': open the gripper before grasping an object.
* 'close_gripper': close the gripper to grasp an object.
* 'get_position': get the position of an object.

Common rules for detailed plan:
 - You must plan according to the high-level idea.
 - You must use existing skills.
 - You must make each plan step only call one skill at once and be as atomic as possible.
 - Before planning every step, rehearse the relevant [OBJECT]'s [REHEARSED_POSITION] after the step. 
 - You must not knock down any objects.
 - You must get the updated [OBJECT]'s position again if [OBJECT] has moved since the last 'get_position([OBJECT])'.

Individual rules with example answers for detailed plan:
Rule: To use a grasped [OBJECT1] to move another [OBJECT2]: in the first step, you must make sure [OBJECT1]'s bounding box is adjacent to the [OBJECT2]'s bounding box to ensure that they are in contact. [OBJECT2]'s position does not change because of the contact. In the next step, you should move the grasped [OBJECT1] to push [OBJECT2].
Example: 
- Use the 'move_to_position' to move the grasped [OBJECT1] to make contact with [OBJECT2]. The [OBJECT2]'s rehearsed position is [REHEARSED_POSITION] after this step.
- Use the 'move_to_position' to push the [OBJECT2] ...

Rule: To push an [OBJECT] into the workspace, the xy position of [OBJECT]'s [REHEARSED_POSITION] must be as close to [0.0, 0.0] as possible.
Example:
- Use the 'move_to_position' to push the [OBJECT] into the workspace. The [OBJECT]'s rehearsed position is [REHEARSED_POSITION] after this step.

Rule: To grasp an [OBJECT], you must get the updated [OBJECT]'s position first
Example:
- Use the 'get_position' to get the [OBJECT]'s position.
- Use the 'move_to_position' to move the gripper close to the [OBJECT] before grasping it.
- Use the 'close_gripper' to grasp the [OBJECT].


In the following, I will provide you the command and the scene information, and you will respond with the description and the plan. You must complete the task successfully using the skills and objects provided.

